# 版本2
version: "2"

# 服务
services:
  
  # 应用
  applications:
    image: tianon/true
    volumes:
        - ${APPLICATION}:/var/www
  
  # 工作空间
  workspace:
    build:
      context: ./workspace
      args: 
        - WORKSPACE_SSH_PORT=${WORKSPACE_SSH_PORT}
        - INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}
        - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
        - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
        - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
        - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
        - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}
      dockerfile: "Dockerfile-${PHP_VERSION}"
    volumes_from:
      - applications
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
    tty: true
    networks:
      - frontend
      - backend
  
  # php解析器
  php-fpm:
    build:
      context: ./php-fpm
      args: 
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
      dockerfile: "Dockerfile-${PHP_VERSION}"
    volumes_from:
      - applications
    volumes:
      - "./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini"
    expose:
      - "9000"
    depends_on:
      - workspace
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - "PHP_IDE_CONFIG=${PHP_IDE_CONFIG}"
    networks:
      - backend
  
  # nginx构建
  nginx:
    build:
      context: ./nginx
    volumes_from:
      - applications
    volumes:
      - "${NGINX_HOST_LOG_PATH}:/var/log/nginx"
      - "${NGINX_SITES_PATH}:/etc/nginx/sites-available"
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend
  
  # mysql构建
  mysql:
    build:
      context: ./mysql
      args:
        - "MYSQL_VERSION=${MYSQL_VERSION}"
    environment:
      - "MYSQL_DATABASE=${MYSQL_DATABASE}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "TZ=${WORKSPACE_TIMEZONE}"
    volumes:
      - "${DATA_SAVE_PATH}/mysql:/var/lib/mysql"
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
  
  # mongodb构建
  mongo:
    build: ./mongo
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - "${DATA_SAVE_PATH}/mongo:/data/db"
    networks:
      - backend
  
  # redis构建
  redis:
    build: ./redis
    volumes:
      - "${DATA_SAVE_PATH}/redis:/data"
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend
  
  # memcached构建
  memcached:
    build: ./memcached
    volumes:
      - "${DATA_SAVE_PATH}/memcached:/var/lib/memcached"
    ports:
      - "${MEMCACHED_HOST_PORT}:11211"
    depends_on:
      - php-fpm
    networks:
      - backend
  
  # phpmyadmin构建
  phpmyadmin:
    build: ./phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - "MYSQL_USER=${PMA_USER}"
      - "MYSQL_PASSWORD=${PMA_PASSWORD}"
      - "MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}"
    ports:
      - "${PMA_PORT}:80"
    depends_on:
      - "${PMA_DB_ENGINE}"
    networks:
      - frontend
      - backend

# 网络
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

# 数据卷
volumes:
  mysql:
    driver: local
  memcached:
    driver: local
  redis:
    driver: local
  mongo:
    driver: local
  phpmyadmin:
    driver: local

# 参考之https://github.com/laradock/laradock